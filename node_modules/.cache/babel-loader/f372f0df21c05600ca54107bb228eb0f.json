{"ast":null,"code":"var _jsxFileName = \"/Users/urtezebciukaite/Desktop/TS10/REACT/pamoka/src/pages/Register.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RegisterPage = () => {\n  _s();\n\n  const emailRef = useRef();\n  const passOneRef = useRef();\n  const passTwoRef = useRef();\n  const typeRef = useRef();\n  const [currentType, setCurrentType] = useState(null);\n\n  function changeType(type) {\n    setCurrentType(type);\n  }\n\n  function registerUser() {\n    const newUser = {\n      usertype: currentType,\n      useremail: emailRef.current.value,\n      userpass: passOneRef.current.value,\n      passTwo: passTwoRef.current.value\n    };\n    console.log(newUser);\n    const options = {\n      method: \"POST\",\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    };\n    fetch(\"http://localhost:4000/regUser\", options).then(res => res.json()).then(data => {\n      console.log(data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select user type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: event => changeType(event.target.value),\n        value: currentType,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"regular\",\n          children: \"Regular\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: typeRef,\n      type: \"text\",\n      placeholder: \"select type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: emailRef,\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: passOneRef,\n      placeholder: \"password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      ref: passTwoRef,\n      placeholder: \"repeat password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: registerUser,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(RegisterPage, \"lnm2cE6RzdHFmHYuZmFWZ2hetdc=\");\n\n_c = RegisterPage;\nexport default RegisterPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useRef","useState","RegisterPage","emailRef","passOneRef","passTwoRef","typeRef","currentType","setCurrentType","changeType","type","registerUser","newUser","usertype","useremail","current","value","userpass","passTwo","console","log","options","method","headers","body","JSON","stringify","fetch","then","res","json","data","event","target"],"sources":["/Users/urtezebciukaite/Desktop/TS10/REACT/pamoka/src/pages/Register.js"],"sourcesContent":["import React, {useRef, useState} from 'react'\n\nconst RegisterPage = () => {\n\nconst emailRef = useRef()\nconst passOneRef = useRef()\nconst passTwoRef = useRef()\nconst typeRef = useRef()\nconst [currentType, setCurrentType] = useState(null)\n\nfunction changeType(type){\n setCurrentType(type)\n}\n\nfunction registerUser(){\n    const newUser = {\n        usertype: currentType,\n        useremail : emailRef.current.value,\n        userpass: passOneRef.current.value,\n        passTwo: passTwoRef.current.value\n    }\n\n    console.log(newUser)\n\nconst options = {\n        method: \"POST\",\n        headers: {\n            \"content-type\": \"application/json\"\n        },\n        body: JSON.stringify(newUser)\n\n    }\n\n        fetch(\"http://localhost:4000/regUser\", options)\n      .then(res => res.json())\n      .then((data) => {\n        console.log(data)\n\n\n  })    \n}\n\n  return (\n    <div className=\"register\">\n        <h3>Register</h3>\n        <label>\n          Select user type:\n        <select \n        \n        onChange={(event) => changeType(event.target.value)}\n        value={currentType}\n      >\n        \n        <option value=\"regular\">Regular</option>\n        <option value=\"admin\">Admin</option>\n        \n      </select>\n      </label>\n        <input ref={typeRef}  type=\"text\" placeholder=\"select type\" />\n        <input type=\"text\" ref={emailRef}  placeholder=\"email\"/>\n        <input type=\"text\" ref={passOneRef} placeholder=\"password\"/>\n        <input type=\"text\"  ref={passTwoRef} placeholder=\"repeat password\"/>\n        <button onClick={registerUser}>Register</button>\n      \n    </div>\n  )\n}\n\nexport default RegisterPage"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;;;AAEA,MAAMC,YAAY,GAAG,MAAM;EAAA;;EAE3B,MAAMC,QAAQ,GAAGH,MAAM,EAAvB;EACA,MAAMI,UAAU,GAAGJ,MAAM,EAAzB;EACA,MAAMK,UAAU,GAAGL,MAAM,EAAzB;EACA,MAAMM,OAAO,GAAGN,MAAM,EAAtB;EACA,MAAM,CAACO,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC,IAAD,CAA9C;;EAEA,SAASQ,UAAT,CAAoBC,IAApB,EAAyB;IACxBF,cAAc,CAACE,IAAD,CAAd;EACA;;EAED,SAASC,YAAT,GAAuB;IACnB,MAAMC,OAAO,GAAG;MACZC,QAAQ,EAAEN,WADE;MAEZO,SAAS,EAAGX,QAAQ,CAACY,OAAT,CAAiBC,KAFjB;MAGZC,QAAQ,EAAEb,UAAU,CAACW,OAAX,CAAmBC,KAHjB;MAIZE,OAAO,EAAEb,UAAU,CAACU,OAAX,CAAmBC;IAJhB,CAAhB;IAOAG,OAAO,CAACC,GAAR,CAAYR,OAAZ;IAEJ,MAAMS,OAAO,GAAG;MACRC,MAAM,EAAE,MADA;MAERC,OAAO,EAAE;QACL,gBAAgB;MADX,CAFD;MAKRC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAed,OAAf;IALE,CAAhB;IASQe,KAAK,CAAC,+BAAD,EAAkCN,OAAlC,CAAL,CACDO,IADC,CACIC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADX,EAEDF,IAFC,CAEKG,IAAD,IAAU;MACdZ,OAAO,CAACC,GAAR,CAAYW,IAAZ;IAGL,CANK;EAOP;;EAEC,oBACE;IAAK,SAAS,EAAC,UAAf;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA,6CAEA;QAEA,QAAQ,EAAGC,KAAD,IAAWvB,UAAU,CAACuB,KAAK,CAACC,MAAN,CAAajB,KAAd,CAF/B;QAGA,KAAK,EAAET,WAHP;QAAA,wBAMA;UAAQ,KAAK,EAAC,SAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QANA,eAOA;UAAQ,KAAK,EAAC,OAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAPA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA;IAAA;MAAA;MAAA;MAAA;IAAA,QAFJ,eAeI;MAAO,GAAG,EAAED,OAAZ;MAAsB,IAAI,EAAC,MAA3B;MAAkC,WAAW,EAAC;IAA9C;MAAA;MAAA;MAAA;IAAA,QAfJ,eAgBI;MAAO,IAAI,EAAC,MAAZ;MAAmB,GAAG,EAAEH,QAAxB;MAAmC,WAAW,EAAC;IAA/C;MAAA;MAAA;MAAA;IAAA,QAhBJ,eAiBI;MAAO,IAAI,EAAC,MAAZ;MAAmB,GAAG,EAAEC,UAAxB;MAAoC,WAAW,EAAC;IAAhD;MAAA;MAAA;MAAA;IAAA,QAjBJ,eAkBI;MAAO,IAAI,EAAC,MAAZ;MAAoB,GAAG,EAAEC,UAAzB;MAAqC,WAAW,EAAC;IAAjD;MAAA;MAAA;MAAA;IAAA,QAlBJ,eAmBI;MAAQ,OAAO,EAAEM,YAAjB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAwBD,CAhED;;GAAMT,Y;;KAAAA,Y;AAkEN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}